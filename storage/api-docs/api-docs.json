{
    "openapi": "3.0.0",
    "info": {
        "title": "Rants and Confessions",
        "description": "Documentation for Rants and Confessions API",
        "contact": {
            "email": "emmanuelasaber@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "This endpoint allows a user to register by providing their name, email, password, password confirmation, and role.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Full name of the user",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Email address of the user",
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password for the user account",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "description": "Role of the user",
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "example@gmail.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Authenticate a user and return a JWT token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@gmail.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT token for authenticated access",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid email or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Invalidate the user's token and log them out",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token is missing or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/confessions": {
            "get": {
                "tags": [
                    "Confessions"
                ],
                "summary": "Retrieve a list of confessions",
                "description": "Fetch all confessions. Optionally, you can filter by approval status using the `status` query parameter.",
                "operationId": "getConfessions",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter confessions by approval status. Values: 'approved', 'pending'.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "approved",
                                "pending"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of confessions retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "I ate the last slice of pizza."
                                            },
                                            "category": {
                                                "type": "string",
                                                "example": "Funny"
                                            },
                                            "emotion": {
                                                "type": "string",
                                                "example": "Guilty"
                                            },
                                            "is_approved": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-26T10:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-26T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameter.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid status parameter."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving confessions."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Confessions"
                ],
                "summary": "Submit a new confession",
                "description": "Allows users to submit an anonymous confession.",
                "operationId": "storeConfession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "description": "The text of the confession.",
                                        "type": "string",
                                        "example": "I accidentally broke my mom's favorite vase."
                                    },
                                    "category": {
                                        "description": "Optional category of the confession.",
                                        "type": "string",
                                        "example": "Funny"
                                    },
                                    "emotion": {
                                        "description": "Optional emotion associated with the confession.",
                                        "type": "string",
                                        "example": "Guilty"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Confession submitted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Confession created successfully."
                                        },
                                        "confession": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "I accidentally broke my mom's favorite vase."
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Funny"
                                                },
                                                "emotion": {
                                                    "type": "string",
                                                    "example": "Guilty"
                                                },
                                                "is_approved": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-26T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-26T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The message field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while saving the confession."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/confessions/{id}": {
            "get": {
                "tags": [
                    "Confessions"
                ],
                "summary": "Get a single confession",
                "description": "This endpoint retrieves the details of a specific confession by its ID.",
                "operationId": "getConfession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the confession to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confession retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "I feel guilty about not sharing."
                                                },
                                                "is_approved": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Confession not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Confession not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Confessions"
                ],
                "summary": "Delete a confession",
                "description": "This endpoint deletes a specific confession by its ID.",
                "operationId": "deleteConfession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the confession to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confession deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Confession deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Confession not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Confession not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Confessions"
                ],
                "summary": "Toggle approval of a confession",
                "description": "This endpoint allows you to approve or revoke the approval of a confession.",
                "operationId": "updateConfession",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the confession to toggle approval for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confession approval status toggled successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Confession approved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "I feel guilty about not sharing."
                                                },
                                                "is_approved": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Confession not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Confession not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/v1/episodes": {
            "get": {
                "tags": [
                    "Episodes"
                ],
                "summary": "Get paginated episodes",
                "description": "This endpoint retrieves a paginated list of all podcast episodes.",
                "operationId": "getEpisodes",
                "responses": {
                    "200": {
                        "description": "Episodes retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "The Beginning of a Journey"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "An episode about starting something new."
                                                    },
                                                    "img_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    },
                                                    "audio_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/audio.mp3"
                                                    },
                                                    "duration": {
                                                        "type": "string",
                                                        "example": "30:15"
                                                    },
                                                    "posted_on": {
                                                        "type": "string",
                                                        "example": "2024-11-25"
                                                    },
                                                    "season": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "episode": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "spotify_url": {
                                                        "type": "string",
                                                        "example": "https://anchor.fm/example"
                                                    },
                                                    "apple_podcasts_url": {
                                                        "type": "string",
                                                        "example": "https://apple.com/example"
                                                    },
                                                    "archive": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "featured": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "the-beginning-of-a-journey"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-11-25T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-11-26T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Episodes"
                ],
                "summary": "Create a new episode",
                "description": "This endpoint creates a new episode. Only authenticated users can create episodes.",
                "operationId": "storeEpisode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "The Journey Begins"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The first episode of the series where we explore..."
                                    },
                                    "img_url": {
                                        "type": "string",
                                        "example": "https://example.com/episode1.jpg"
                                    },
                                    "audio_url": {
                                        "type": "string",
                                        "example": "https://example.com/audio/episode1.mp3"
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "00:45:30"
                                    },
                                    "posted_on": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-11-29T12:00:00Z"
                                    },
                                    "season": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "episode": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "spotify_url": {
                                        "type": "string",
                                        "example": "https://spotify.com/episode1"
                                    },
                                    "apple_podcasts_url": {
                                        "type": "string",
                                        "example": "https://apple.com/episode1"
                                    },
                                    "archive": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "featured": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "the-journey-begins"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Episode created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "The Journey Begins"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "The first episode of the series where we explore..."
                                                },
                                                "img_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/episode1.jpg"
                                                },
                                                "audio_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/audio/episode1.mp3"
                                                },
                                                "duration": {
                                                    "type": "string",
                                                    "example": "00:45:30"
                                                },
                                                "posted_on": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-29T12:00:00Z"
                                                },
                                                "season": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "episode": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "anchor_podcast": {
                                                    "type": "string",
                                                    "example": "Anchor FM"
                                                },
                                                "apple_podcasts": {
                                                    "type": "string",
                                                    "example": "https://apple.com/episode1"
                                                },
                                                "google_podcasts": {
                                                    "type": "string",
                                                    "example": "https://google.com/episode1"
                                                },
                                                "archive": {
                                                    "type": "string",
                                                    "example": "0"
                                                },
                                                "featured": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "the-journey-begins"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, token is invalid or missing.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/v1/episodes/season/{season}": {
            "get": {
                "tags": [
                    "Episodes"
                ],
                "summary": "Get episodes by season number",
                "description": "This endpoint retrieves a paginated list of episodes for a specific season.",
                "operationId": "getEpisodesBySeason",
                "parameters": [
                    {
                        "name": "season",
                        "in": "path",
                        "description": "The season number of the episodes",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episodes retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "The Beginning of a Journey"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "An episode about starting something new."
                                                    },
                                                    "img_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    },
                                                    "audio_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/audio.mp3"
                                                    },
                                                    "duration": {
                                                        "type": "string",
                                                        "example": "30:15"
                                                    },
                                                    "posted_on": {
                                                        "type": "string",
                                                        "example": "2024-11-25"
                                                    },
                                                    "season": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "episode": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "spotify_url": {
                                                        "type": "string",
                                                        "example": "https://anchor.fm/example"
                                                    },
                                                    "apple_podcasts_url": {
                                                        "type": "string",
                                                        "example": "https://apple.com/example"
                                                    },
                                                    "archive": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "featured": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "the-beginning-of-a-journey"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-11-25T10:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-11-26T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/episodes/search": {
            "get": {
                "tags": [
                    "Episodes"
                ],
                "summary": "Search episodes by title or description",
                "description": "This endpoint allows users to search for episodes based on a search term. It will search both the title and description of the episodes and return matching results.",
                "operationId": "searchEpisodes",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "The search term to search for in the title or description of episodes.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "podcast"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episodes retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "The Ultimate Podcast"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "An in-depth discussion about podcasting."
                                                    },
                                                    "img_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    },
                                                    "audio_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/audio.mp3"
                                                    },
                                                    "duration": {
                                                        "type": "string",
                                                        "example": "45:00"
                                                    },
                                                    "posted_on": {
                                                        "type": "string",
                                                        "example": "2024-11-01"
                                                    },
                                                    "season": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "episode": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "anchor_podcast": {
                                                        "type": "string",
                                                        "example": "https://anchor.fm/example"
                                                    },
                                                    "apple_podcasts": {
                                                        "type": "string",
                                                        "example": "https://apple.com/example"
                                                    },
                                                    "google_podcasts": {
                                                        "type": "string",
                                                        "example": "https://google.com/example"
                                                    },
                                                    "archive": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "featured": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "the-ultimate-podcast"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search term.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The search term is invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/episodes/{id}": {
            "put": {
                "tags": [
                    "Episodes"
                ],
                "summary": "Update an episode",
                "description": "This endpoint updates an episode using the provided data.",
                "operationId": "updateEpisode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the episode to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Episode Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "An updated description of the episode."
                                    },
                                    "img_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/updated-image.jpg"
                                    },
                                    "audio_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/updated-audio.mp3"
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "01:15:30"
                                    },
                                    "posted_on": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-01T12:00:00Z"
                                    },
                                    "season": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "episode": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "spotify_url": {
                                        "type": "string",
                                        "example": "https://spotify.com/updated-episode"
                                    },
                                    "apple_podcasts_url": {
                                        "type": "string",
                                        "example": "https://podcasts.apple.com/updated-episode"
                                    },
                                    "archive": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "featured": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "updated-episode-title"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Episode updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Episode Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "An updated description of the episode."
                                                },
                                                "img_url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://example.com/updated-image.jpg"
                                                },
                                                "audio_url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://example.com/updated-audio.mp3"
                                                },
                                                "duration": {
                                                    "type": "string",
                                                    "example": "01:15:30"
                                                },
                                                "posted_on": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-01T12:00:00Z"
                                                },
                                                "season": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "episode": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "spotify_url": {
                                                    "type": "string",
                                                    "example": "https://spotify.com/updated-episode"
                                                },
                                                "apple_podcasts_url": {
                                                    "type": "string",
                                                    "example": "https://podcasts.apple.com/updated-episode"
                                                },
                                                "archive": {
                                                    "type": "string",
                                                    "example": "0"
                                                },
                                                "featured": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "updated-episode-title"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-29T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-01T12:15:30Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Episode not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Episode not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Episodes"
                ],
                "summary": "Delete an episode",
                "description": "This endpoint deletes a specific episode by its ID.",
                "operationId": "deleteEpisode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the episode to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Episode deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Episode not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Episode not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/v1/team-members": {
            "get": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Get all team members",
                "description": "This endpoint retrieves a paginated list of all team members.",
                "operationId": "getTeamMembers",
                "responses": {
                    "200": {
                        "description": "Team members retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Clitoria Wettum"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "Host"
                                                    },
                                                    "bio": {
                                                        "type": "string",
                                                        "example": "An old caved woman of many values."
                                                    },
                                                    "profile_image": {
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    },
                                                    "social_media_links": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "platform": {
                                                                    "type": "string",
                                                                    "example": "Instagram"
                                                                },
                                                                "url": {
                                                                    "type": "string",
                                                                    "example": "https://instagram.com/clitoria"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Create a new team member with social media links",
                "description": "This endpoint creates a new team member and their associated social media links.",
                "operationId": "createTeamMember",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Clitoria Wettum"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "Host"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "An experienced podcast host."
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/image.jpg"
                                    },
                                    "social_media_links": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "platform": {
                                                    "type": "string",
                                                    "example": "Instagram"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://instagram.com/clitoria"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Team member created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Clitoria Wettum"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "Host"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "An experienced podcast host."
                                                },
                                                "profile_image": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.jpg"
                                                },
                                                "social_media_links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "platform": {
                                                                "type": "string",
                                                                "example": "Instagram"
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://instagram.com/clitoria"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/v1/team-members/{id}": {
            "get": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Get a single team member",
                "description": "This endpoint retrieves details of a single team member by their ID.",
                "operationId": "getTeamMember",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the team member to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team member retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Clitoria Wettum"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "Host"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "An experienced podcast host."
                                                },
                                                "profile_image": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.jpg"
                                                },
                                                "social_media_links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "platform": {
                                                                "type": "string",
                                                                "example": "Instagram"
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://instagram.com/clitoria"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Team member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Team member not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Update a team member's information",
                "description": "This endpoint updates a team member's information, including their social media links.",
                "operationId": "updateTeamMember",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the team member to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Clitoria Wettum"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "Host"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "An experienced podcast host."
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/image.jpg"
                                    },
                                    "social_media_links": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "platform": {
                                                    "type": "string",
                                                    "example": "Instagram"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://instagram.com/clitoria"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Team member updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Team member updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Clitoria Wettum"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "Host"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "An experienced podcast host."
                                                },
                                                "profile_image": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.jpg"
                                                },
                                                "social_media_links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "platform": {
                                                                "type": "string",
                                                                "example": "Instagram"
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://instagram.com/clitoria"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Team member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Team member not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Team Members"
                ],
                "summary": "Delete a team member and their associated social media links",
                "description": "This endpoint deletes a team member along with their associated social media links.",
                "operationId": "deleteTeamMember",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the team member to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team member and their social media links deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Team member deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Team member not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Team member not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "Enter token in the format: `Bearer {token}`",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Confessions",
            "description": "Confessions"
        },
        {
            "name": "Episodes",
            "description": "Episodes"
        },
        {
            "name": "Team Members",
            "description": "Team Members"
        }
    ]
}